Starting Manthan1 Preprocessor
preprocess done
creating cnf file..
54
positive unate 53
all Y variables are unates
Solved !! done !
weighted samples....
samples:  [[0 0 0 ... 1 1 1]
 [0 0 0 ... 1 1 1]
 [0 0 0 ... 1 1 1]
 ...
 [1 1 1 ... 1 1 1]
 [1 1 1 ... 1 1 1]
 [1 1 1 ... 1 1 1]]
torch.Size([1000, 108])
Total, Train, and Valid shapes torch.Size([1000, 108]) torch.Size([1000, 108]) torch.Size([500, 108])
No. of vars: 108, No. of output vars: 54, No. of eqns: 594
Input size:  108
Output size:  54
indices:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53] [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 60, 67, 68, 69]
inps, tgts:  torch.Size([1000, 54]) torch.Size([1000, 54])
indices:  [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53] [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 60, 67, 68, 69]
inps, tgts:  torch.Size([500, 54]) torch.Size([500, 54])
No of outputs:  54 10 108
gcln no out:  54
Network
GCLN_CNF_Arch3()
Accuracy:  0.9814814814814815
False
epoch 1, train loss 1.0
epoch 1, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 2, train loss 1.0
epoch 2, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 3, train loss 1.0
epoch 3, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 4, train loss 1.0
epoch 4, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 5, train loss 1.0
epoch 5, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 6, train loss 1.0
epoch 6, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 7, train loss 1.0
epoch 7, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 8, train loss 1.0
epoch 8, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 9, train loss 1.0
epoch 9, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 10, train loss 1.0
epoch 10, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 11, train loss 1.0
epoch 11, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 12, train loss 1.0
epoch 12, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 13, train loss 1.0
epoch 13, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 14, train loss 1.0
epoch 14, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 15, train loss 1.0
epoch 15, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 16, train loss 1.0
epoch 16, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 17, train loss 1.0
epoch 17, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 18, train loss 1.0
epoch 18, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 19, train loss 1.0
epoch 19, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 20, train loss 1.0
epoch 20, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 21, train loss 1.0
epoch 21, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 22, train loss 1.0
epoch 22, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 23, train loss 1.0
epoch 23, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 24, train loss 1.0
epoch 24, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 25, train loss 1.0
epoch 25, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 26, train loss 1.0
epoch 26, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 27, train loss 1.0
epoch 27, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 28, train loss 1.0
epoch 28, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 29, train loss 1.0
epoch 29, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 30, train loss 1.0
epoch 30, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 31, train loss 1.0
epoch 31, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 32, train loss 1.0
epoch 32, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 33, train loss 1.0
epoch 33, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 34, train loss 1.0
epoch 34, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 35, train loss 1.0
epoch 35, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 36, train loss 1.0
epoch 36, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 37, train loss 1.0
epoch 37, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 38, train loss 1.0
epoch 38, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 39, train loss 1.0
epoch 39, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 40, train loss 1.0
epoch 40, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 41, train loss 1.0
epoch 41, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 42, train loss 1.0
epoch 42, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 43, train loss 1.0
epoch 43, train loss 1.0
=> Saving Checkpoint
Accuracy:  0.9814814814814815
False
epoch 44, train loss 1.0
epoch 44, train loss 1.0
=> Saving Checkpoint
Traceback (most recent call last):
  File "/home/ravi/bfs/run.py", line 29, in <module>
    model, train_loss, valid_loss, final_accuracy, final_epochs = training.trainer(
  File "/home/ravi/bfs/code/training.py", line 101, in trainer
    gcln, train_loss, valid_loss, final_accuracy, final_epochs = train(args.architecture, args.cnf,
  File "/home/ravi/bfs/code/training.py", line 27, in train
    gcln, train_loss, valid_loss, accuracy, epoch = train_regressor(architecture, cnf,
  File "/home/ravi/bfs/code/algorithms/trainRegression.py", line 106, in train_regressor
    t_loss.backward()
  File "/home/ravi/anaconda3/lib/python3.9/site-packages/torch/_tensor.py", line 307, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/ravi/anaconda3/lib/python3.9/site-packages/torch/autograd/__init__.py", line 154, in backward
    Variable._execution_engine.run_backward(
KeyboardInterrupt
